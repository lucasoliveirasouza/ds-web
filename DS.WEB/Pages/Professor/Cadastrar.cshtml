@page
@model DS.WEB.Pages.Professor.CadastrarProfessorModel
@{
    Layout = "_LayoutCadastro";
    ViewData["tituloFuncao"] = "Cadastro de professores";
    var idProfessor = (string)ViewData["idProfessor"];
}

<partial name="Shared/Components/_ModalEndereco" model="new DS.WEB.Pages.Shared.Components._ModalEnderecoModel()" />

<div class="row">
    <div class="col-xl-3">
        <label for="Nome" class="d-flex form-label">Nome</label>
        <div class="form-group" data="">
            <div class="input-group" data-target-input="nearest">
                <input type="text" id="Nome" name="Nome" class="form-control" value="" autocomplete="off">
            </div>
        </div>
    </div>
    <div class="col-xl-3">
        <label for="CPF" class="d-flex form-label">CPF</label>
        <div class="form-group" data="">
            <div class="input-group" data-target-input="nearest">
                <input type="text" maxlength="11" id="CPF" name="CPF" class="form-control" value="" autocomplete="off">
            </div>
        </div>
    </div>
    <div class="col-xl-3">
        <label for="Endereco" class="d-flex form-label">Endereço</label>
        <div class="form-group" data="">
            <div class="input-group" data-target-input="nearest">
                <input readonly type="text" maxlength="11" id="Endereco" name="Endereco" class="form-control" value="" autocomplete="off">
                <div class="input-group-append" style="@(string.IsNullOrEmpty(idProfessor) ? "background: var(--success);" : "background: var(--warning);")">
                    <button type="button" class="btn py-2 my-0 px-4 " title="@(string.IsNullOrEmpty(idProfessor) ? "Adicionar endereco" : "Editar endereco")" 
                        data-bs-toggle="tooltip" tabindex="-1" onclick="adicionarEndereco(event)">
                        <i style="color: white;" class="@(string.IsNullOrEmpty(idProfessor) ? "fa fa-plus" : "fa fa-pencil")"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-xl-3">
        <label for="DataNascimento" class="d-flex form-label">Data de nascimento</label>
        <div class="form-group" data="">
            <div class="input-group input-date" id="DataInicial_container" data-target-input="nearest">
                <input type="text" maxlength="10" id="DataNascimento" name="DataNascimento" class="form-control date datepicker-input" data-target="#DataInicial_container" value="" data-mask="date" autocomplete="off">
                <div class="input-group-append" data-target="#DataInicial_container">
                    <button type="button" class="btn btn-outline-primary py-2 my-0 px-4 " data-bs-toggle="tooltip" tabindex="-1">
                        <i class=" fa fa-calendar"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3">
        <label for="Email" class="d-flex form-label">Email</label>
        <div class="form-group" data="">
            <div class="input-group" data-target-input="nearest">
                <input type="text" id="Email" name="Email" class="form-control" value="" autocomplete="off">
            </div>
        </div>
    </div>
    <div class="col-xl-3">
        <label for="Senha" class="d-flex form-label">Senha</label>
        <div class="form-group">
            <div class="input-group">
                <input type="password" id="Senha" name="Senha" class="form-control">
                <div class="input-group-append">
                    <button type="button" class="btn btn-outline-primary py-2 my-0 px-4 " title="Visualizar a senha" data-bs-toggle="tooltip" onclick="visualizeSenha(this, event)" tabindex="-1">
                        <i style="color: black;" class="fa fa-eye-slash"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<script defer>
    EventDomContentLoaded(() => {
        const botaoGravar = document.getElementById('gravar');
        const botaoCancelar = document.getElementById('cancelar');
        botaoGravar.addEventListener('click', graveCadastroProfessor)
        botaoCancelar.addEventListener('click', (ev) => {
            ev.preventDefault();
            new Modal().confirmacao("Tem certeza que deseja cancelar o cadastro?", () => {
                window.location.href = '/Professor/Aterrissagem';
            }).render();
        });
        verifiqueEdicao();
    });

async function graveCadastroProfessor(ev) {
    ev.preventDefault();
    const optionsFetch = {
        url: `${APIHelper.LocalHost}/Professor`,
        data: {
            Nome: Nome.value,
            Cpf: CPF.value,
            DataNascimento: DataNascimento.value.convertaStrLocaleToDate(),
            Email: Email.value,
            Senha: Senha.value,
            Endereco: obtenhaEndereco()
        }
    }
        if (idProfessor) {
        optionsFetch.method = "PUT"
            optionsFetch.data.Id = idProfessor;
    }
    const resposta = await postJSON(optionsFetch);
    if(resposta && resposta.success)
    {
        new Modal().sucesso(idProfessor ? 'Professor editado com sucesso.' : 'Professor cadastrado com sucesso.').depoisDeOcultar(() =>{
            window.location.href = '/Professor/Aterrissagem';
        }).render()
    }
}
    let idProfessor;
async function verifiqueEdicao()
{
        idProfessor = '@Html.Raw(idProfessor)';
        if (idProfessor) {
        var url = new URL(`${APIHelper.LocalHost}/Professor/id`)
            url.searchParams.append("id", idProfessor);
        const options = {
            url: url,
            method: "GET"
        }
        const resposta = await postJSON(options);
        if (resposta && resposta.success) {
            preenchaEnderecoEdicao(resposta.data.endereco);
            Nome.value = resposta.data.nome;
            CPF.value = resposta.data.cpf;
            DataNascimento.value = resposta.data.dataNascimento.convertaStrLocaleToDate().convertaDateToStrDiaMesAno();
            Email.value = resposta.data.email;
            Senha.disabled = true;
            Matricula.disabled = true;
        }
        debugger;
    }
}

function adicionarEndereco(ev){
    ev.preventDefault();
    ev.stopPropagation();
    modalAdicionarEndereco.show();
}
</script>